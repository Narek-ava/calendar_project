version: "3.7"
services:
    gateway:
        build:
            context: gateway/docker
            dockerfile: local/nginx/Dockerfile
        ports:
            - "8080:8080" # frontend
            - "8081:8081" # api
            - "8082:8082" # mailhog
            - "8083:8083" # freescout
            - "8084:8084" # tva

    websocket:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            DEBUG: '1'
            METRICS_SERVER_PORT: '9601'
        ports:
            - '6001:6001'
            - '9601:9601'

    frontend:
        build:
            context: frontend/docker/local/nginx
        volumes:
            - ./frontend/docker/local/nginx/conf.d:/etc/nginx/conf.d

    frontend-node:
        build:
            context: frontend/docker/local/node
        environment:
            REACT_APP_API_URL: /api
            REACT_APP_PUSHER_HOST: localhost
            REACT_APP_PUSHER_PORT: 6001
            REACT_APP_MAPBOX_TOKEN: pk.eyJ1IjoiYWxleGV5azg5IiwiYSI6ImNsOXNkcWtyNDB6bTMzdnA1dGs4NnRoajMifQ.JO4eOsyEmrADviQDHbTzeA
        volumes:
            - ./frontend:/app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && DISABLE_ESLINT_PLUGIN=true yarn start"
        tty: true

    frontend-node-cli:
        build:
            context: frontend/docker/local/node
        volumes:
            - ./frontend:/app

    api:
        build:
            context: api/docker
            dockerfile: local/nginx/Dockerfile
        depends_on:
            - api-php-fpm
        volumes:
            - ./api:/app

    api-php-fpm:
        build:
            context: api/docker
            dockerfile: local/php-fpm/Dockerfile
        depends_on:
            - freescout-php-fpm
            - api-postgres
            - e2e-postgres
        environment: &api-env
            APP_NAME: Chilled Butter App
            APP_ENV: local
            APP_KEY: base64:cddcUAXnPRJmrSX077xmWdvh6cB2ekfqeXTwvOnXkMs=
            APP_DEBUG: 1
            APP_URL: http://localhost:8081
            APP_FRONTEND_URL: http://localhost:8080
            APP_FRONTEND_SHORT_URL: http://localhost:8080
            LOG_CHANNEL: stack
            LOG_LEVEL: debug
            DB_CONNECTION: pgsql
            DB_HOST: api-postgres
            DB_PORT: 5432
            DB_HOST_E2E: e2e-postgres
            DB_PORT_E2E: 5433
            DB_DATABASE: api
            DB_USERNAME: app
            DB_PASSWORD: password
            FILESYSTEM_DISK: s3
            AWS_ACCESS_KEY_ID: app
            AWS_SECRET_ACCESS_KEY: password
            AWS_DEFAULT_REGION: us-east-1
            AWS_BUCKET: local
            AWS_ENDPOINT: http://minio:9000
            AWS_USE_PATH_STYLE_ENDPOINT: "true"
            TWILIO_AUTH_TOKEN:
            TWILIO_ACCOUNT_SID:
            TWILIO_API_KEY:
            TWILIO_API_SECRET:
            TWILIO_FROM:
            BROADCAST_DRIVER: pusher
            PUSHER_APP_KEY: app-key
            PUSHER_APP_ID: app-id
            PUSHER_APP_SECRET: app-secret
            PUSHER_HOST: websocket
            PUSHER_PORT: 6001
            REDIS_HOST: redis
            SESSION_DRIVER: redis
            CACHE_DRIVER: redis
            QUEUE_CONNECTION: redis
            MAIL_MAILER: smtp
            MAIL_HOST: mailhog
            MAIL_PORT: 1025
            MAIL_USERNAME: null
            MAIL_PASSWORD: null
            MAIL_ENCRYPTION: "false"
            MAIL_FROM_NAME: Chilled Butter App
            MAIL_FROM_ADDRESS: noreply@admin.com
            SENTRY_LARAVEL_DSN:
            PAYPAL_MODE: sandbox
            STRIPE_KEY: pk_test_51J2vJsHo87dDYX5eAK5O1SahUq94E7vAaWEiejpXT2kmFKXRqp64NKFjc9raLeZuvPXeDEhnApKULaMtc1ufMo1n00FORfPjVQ
            STRIPE_SECRET: sk_test_51J2vJsHo87dDYX5eUfBTydJwlePBYTeJiVV8Xj70CgqqPcd6YfamxpeMUyOv24VoGiFeyuLfwRJuyvDgUHqIm4fR00OXPQfmUb
            STRIPE_WEBHOOK_SECRET: whsec_7c12437ef0226343aec4a0f790479193516825ec272564239205050e08031e7a
            AUTHNET_API_LOGIN_ID: 843wE5Qn2
            AUTHNET_TRANSACTION_KEY: 4TcDL8K58Z35su3J
            GOOGLE_CLIENT_ID: 778205709980-iv3lss8ctucg2j34u671h7tk4fantqlq.apps.googleusercontent.com
            GOOGLE_CLIENT_SECRET: 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
            GOOGLE_REDIRECT_URI: http://localhost:8081/google/oauth
#            GOOGLE_WEBHOOK_URI: http://localhost:8081/google/webhook
            GOOGLE_WEBHOOK_URI: https://58fd-5-187-2-114.eu.ngrok.io/google/webhook
            INBOX_TO_CB_API_KEY: HPs6ME
        volumes:
            - ./api:/app
        links:
            - api-postgres
            - e2e-postgres

    api-php-schedule:
        build:
            context: api/docker
            dockerfile: local/php-cli/Dockerfile
        restart: always
        command: php artisan schedule:work
        environment:
            <<: *api-env
        volumes:
            - ./api:/app
        links:
            - api-postgres
            - e2e-postgres

    api-php-queue:
        build:
            context: api/docker
            dockerfile: local/php-cli/Dockerfile
        restart: always
        command: php artisan queue:listen
        environment:
            <<: *api-env
        volumes:
            - ./api:/app
        links:
            - api-postgres
            - e2e-postgres

    api-php-cli:
        build:
            context: api/docker
            dockerfile: local/php-cli/Dockerfile
        environment:
            <<: *api-env
        volumes:
            - ./api:/app
        links:
            - api-postgres
            - e2e-postgres

    freescout:
        build:
            context: freescout/docker
            dockerfile: local/nginx/Dockerfile
        volumes:
            - ./freescout:/app

    freescout-php-fpm:
        build:
            context: freescout/docker
            dockerfile: local/php-fpm/Dockerfile
        environment: &freescout-env
            APP_URL: http://localhost:8083
            APP_KEY: base64:pEhdK9HMJmJgEo+VXJyBzw9TWogW7aQP/2CSuyV/+s8=
            DB_CONNECTION: pgsql
            DB_HOST: freescout-postgres
            DB_PORT: 5432
            DB_DATABASE: freescout
            DB_USERNAME: freescout
            DB_PASSWORD: password
            APIWEBHOOKS_CORS_HOSTS: "*"
            APP_FETCH_SCHEDULE: 1
            SENTRY_LARAVEL_DSN:
            LOG_LEVEL: debug
            APP_DEBUG: 1
            APP_ENV: local
            APP_DISABLE_UPDATING: true
            REDIS_HOST: redis
            SESSION_DRIVER: redis
            CACHE_DRIVER: redis
            QUEUE_CONNECTION: redis
            AWS_ACCESS_KEY_ID: app
            AWS_SECRET_ACCESS_KEY: password
            AWS_DEFAULT_REGION: us-east-1
            AWS_BUCKET: local
            AWS_ENDPOINT: http://minio:9000
            AWS_USE_PATH_STYLE_ENDPOINT: "true"
            MAIL_DRIVER: mailgun
            MAIL_FROM_NAME: "Chilled Butter App Inbox"
            MAIL_FROM_ADDRESS: "noreply@mail.chilledcxn.com"
            MAILGUN_DOMAIN: "mail.chilledcxn.com"
            MAILGUN_SECRET:
            MAILGUN_SIGNING_KEY:
            MAILGUN_API_KEY:
            INBOX_TO_CB_API_KEY: HPs6ME
        volumes:
            - ./freescout:/app

    freescout-php-cli:
        build:
            context: freescout/docker
            dockerfile: local/php-cli/Dockerfile
        environment:
            <<: *freescout-env
        volumes:
            - ./freescout:/app

    freescout-php-queue:
        build:
            context: freescout/docker
            dockerfile: local/php-cli/Dockerfile
        restart: always
        command: php artisan queue:listen --queue='emails,default' --sleep=5 --tries=1
        environment:
            <<: *freescout-env
        volumes:
            - ./freescout:/app

    freescout-crontab:
        image: willfarrell/crontab:1.0.0
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./freescout/docker/common/cron/config.json:/opt/crontab/config.json:rw

    api-postgres:
        image: postgres:13.1-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: password
            POSTGRES_DB: api
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "5432:5432"
              
    e2e-postgres:
        image: postgres:13.1-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: password
            POSTGRES_DB: api
        volumes:
            - e2e-postgres:/var/lib/postgresql/data
        ports:
            - "5433:5432"

    freescout-postgres:
        image: postgres:13.1-alpine
        environment:
            POSTGRES_USER: freescout
            POSTGRES_PASSWORD: password
            POSTGRES_DB: freescout
        volumes:
            - freescout-postgres:/var/lib/postgresql/data
        ports:
            - "54321:5432"

    redis:
        image: 'redis:alpine'
        ports:
          - "6379"
        volumes:
          - 'redis:/data'
        healthcheck:
          test: [ "CMD", "redis-cli", "ping" ]
          retries: 3
          timeout: 5s

    minio:
        image: 'minio/minio:latest'
        ports:
            - '9000:9000'
            - '8900:8900'
        environment:
            MINIO_ROOT_USER: 'app'
            MINIO_ROOT_PASSWORD: 'password'
        volumes:
            - 'minio:/data/minio'
        command: minio server /data/minio --console-address ":8900"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            retries: 3
            timeout: 5s

    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - "1025:1025"
            - "8025:8025"
   
    tva:
        build:
            context: tva/docker/local/nginx

    tva-node:
        build:
            context: tva/docker/local/node
        environment:
            PUBLIC_URL: http://localhost:8080/tva
            REACT_APP_TOKEN_ENDPOINT: http://localhost:8080/api/public/tva-token
            REACT_APP_DISABLE_TWILIO_CONVERSATIONS: true
        volumes:
            - ./tva:/app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && DISABLE_ESLINT_PLUGIN=true yarn start"
        tty: true
        
    tva-node-cli:
        build:
            context: tva/docker/local/node
        volumes:
            - ./tva:/app

volumes:
    redis:
    api-postgres:
    e2e-postgres:
    freescout-postgres:
    minio:
