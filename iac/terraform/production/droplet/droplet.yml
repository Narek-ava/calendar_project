---
- become: yes
  hosts: all
  name: droplet
  tasks:
    - name: Wait for apt to unlock
      become: yes
      shell:  while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Install Docker SDK dependencies
      apt:
        name:
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: present
        update_cache: yes

    - name: Install Docker SDK for Python
      pip:
        name: docker

    - name: Install dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Verify fingerprint
      apt_key:
        id: 0EBFCD88
        state: present

    - name: Set up the repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      notify: Start docker on boot

    - name: Add the user 'deploy' and add it to 'docker'
      user:
        name: deploy
        groups:
          - docker

    - name: Add SSH key to 'deploy'
      authorized_key:
        user: deploy
        state: present
        key: "{{ lookup('file', pub_key) }}"

    - name: Set periodic Docker prune
      cron:
        name: docker-prune
        job: 'docker system prune -af --filter "until=48h"'
        minute: '0'
        hour: '1'

    - name: Remove useless packages
      apt:
        autoclean: yes

    - name: Remove useless dependencies
      apt:
        autoremove: yes

    - name: Init Swarm
      docker_swarm:
        advertise_addr: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:2377"
        state: present
      register: swarm_init_result

    - name: Store worker join token
      set_fact:
        worker_join_token: "{{ swarm_init_result.swarm_facts.JoinTokens.Worker }}"

  handlers:
    - name: Start docker on boot
      systemd:
        name: docker
        state: started
        enabled: yes
